From 54de9a67d69c006f2fcd398b724b29be829d40e0 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Peter=20Od=C3=A9us?= <peter.odeus@gmail.com>
Date: Mon, 2 Nov 2009 14:07:50 +0100
Subject: [PATCH] Made buggy method visit(OvalElement..) render an oval correctly (position and size) by adding SWTRenderer's code from
  http://github.com/egonw/bioclipse.cheminformatics/blob/2.2.x/plugins/net.bioclipse.cdk.jchempaint.view/src/net/bioclipse/cdk/jchempaint/view/SWTRenderer.java

---
 .../cdk/renderer/visitor/AWTDrawVisitor.java       |   39 +++++++++++++++-----
 1 files changed, 30 insertions(+), 9 deletions(-)

diff --git a/src/main/org/openscience/cdk/renderer/visitor/AWTDrawVisitor.java b/src/main/org/openscience/cdk/renderer/visitor/AWTDrawVisitor.java
index d7e0d4a..3d07a13 100644
--- a/src/main/org/openscience/cdk/renderer/visitor/AWTDrawVisitor.java
+++ b/src/main/org/openscience/cdk/renderer/visitor/AWTDrawVisitor.java
@@ -152,18 +152,39 @@ public class AWTDrawVisitor extends AbstractAWTDrawVisitor {
 
     public void visit(OvalElement oval) {
         this.g.setColor(oval.color);
-        int[] min = 
-            this.transformPoint(oval.x - oval.radius, oval.y - oval.radius);
-        int[] max = 
-            this.transformPoint(oval.x + oval.radius, oval.y + oval.radius);
-        int w = max[0] - min[0];
-        int h = max[1] - min[1];
+        int radius = scaleX(oval.radius);
+        int diameter = scaleX(oval.radius * 2);
+ 
         if (oval.fill) {
-            this.g.fillOval(min[0], min[1], w, h);
-        } else {
-            this.g.drawOval(min[0], min[1], w, h);
+        	this.g.fillOval(transformX(oval.x) - radius,
+                        transformY(oval.y) - radius,
+                        diameter,
+                        diameter );
+        } else { 
+        	this.g.drawOval(transformX(oval.x) - radius,
+                        transformY(oval.y) - radius,
+                        diameter,
+                        diameter );
         }
     }
+    
+    private int scaleX(double x) {
+        return (int) (x*transform.getScaleX());
+    }
+    
+    private int transformX(double x) {
+        return (int) transform( x, 1 )[0];
+    }
+ 
+    private int transformY(double y) {
+        return (int) transform( 1, y )[1];
+    }
+ 
+    private double[] transform(double x, double y) {
+        double [] result = new double[2];
+        transform.transform( new double[] {x,y}, 0, result, 0, 1 );
+        return result;
+    }
 
     public void visit(TextElement textElement) {
         this.g.setFont(this.fontManager.getFont());
-- 
1.6.0.4

